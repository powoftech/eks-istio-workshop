apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  project: default
  source:
    # This points to a public Helm chart repository
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "76.3.0" # Pin to a specific, recent chart version for stability
    helm:
      # We are customizing the Helm chart directly from Git.
      # This is where the real power lies.
      values: |
        # Create a dedicated namespace for monitoring components
        namespace: monitoring

        # --- Prometheus Configuration ---
        prometheus:
          prometheusSpec:
            # This tells Prometheus to look for services with the label "app.kubernetes.io/name=prometheus"
            # to scrape metrics from. Your applications will need this label.
            serviceMonitorSelector:
              matchLabels:
                app.kubernetes.io/name: prometheus

        # --- Grafana Configuration ---
        grafana:
          # Set the initial admin password. Change this to a secure password.
          adminPassword: "prom-operator" # <-- CHANGE THIS in a real environment
          # This section pre-loads Grafana with default dashboards for Kubernetes
          dashboards:
            default:
              # Enable default dashboards for cluster components
              kubernetes-api-server:
                enabled: true
              kubernetes-coredns:
                enabled: true
              kubernetes-nodes:
                enabled: true
  destination:
    server: https://kubernetes.default.svc
    # Deploy this stack into its own dedicated namespace
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    # This is important! It allows ArgoCD to create the "monitoring" namespace for you.
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
